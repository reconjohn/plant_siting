# libraries
library(tidyr)
library(dplyr)
library(stringr)
library(readxl)
library(stringdist)
library(tidyverse)
library(openxlsx)
library(readr)
library(scales)
library(sf)
library(stargazer)
library(Hmisc)
library(ggpubr)
library(mapview)
library(leafsync)
sf::sf_use_s2(FALSE)
load("C:/Users/yohan/Big_data/US Tract/census.Rdata") #tr.sf, st
DAC <- read_csv("https://github.com/reconjohn/disadvantaged_communities/raw/main/results/DAC_s.csv")
dis <- tr.sf %>%
rename(GEOID = FIPS) %>%
dplyr::select(GEOID) %>%
left_join(DAC %>%
dplyr::select(GEOID, disadvantaged), by = "GEOID")
relevant_variables_demographics = c("POPDEN",
"OVER64",
"UNDER5", # relevant demographics variables
"LINGISO",
"PEOPCOLOR",
"UNEMPLOYED",
"LOWINCOME",
"LESSHS")
# join demo data
demo <- read_csv("./data/demographic_df_feats_tract.csv") %>%
mutate(GEOID = ifelse(GEOID < 10001040100, paste0("0",GEOID), GEOID) %>%
as.character()) %>%
dplyr::rename(POPDEN =populationdensity) %>%
dplyr::select(GEOID, population, POPDEN)
dem <- DAC %>%
mutate(PEOPCOLOR = PEOPCOLORPCT,
LOWINCOME = LOWINCPCT,
UNEMPLOYED = UNEMPPCT,
LINGISO = LINGISOPCT,
LESSHS = LESSHSPCT,
UNDER5 = UNDER5PCT,
OVER64 = OVER64PCT) %>%
dplyr::select(GEOID, PEOPCOLOR,LOWINCOME,UNEMPLOYED, LINGISO,LESSHS,UNDER5,OVER64)
demo <- demo %>%
left_join(dem, by = "GEOID")
source("./syntax/Data.R")
ggsave <- function(..., bg = 'white') ggplot2::ggsave(..., bg = bg)
# source: ACS 2021; EPA EJ screening Tool; EIA 2021
# pw: donut shape weighted demo features by buffer
# ah: host identification for plant by buffer size with dis joined
# pm: plant mapping
load("./data/derived/data.RData")
# pw_s: donut shape weighted demo features by buffer
# ah_s: host identification for plant by buffer size with dis joined
# pm_s: plant mapping
load("./data/derived/data_s.RData")
load("./data/derived/TL.RData") # tl_d, ah_t
# donut
donut <- function(data, group){
data %>%
mutate(BUFF_DIST = as.character(BUFF_DIST)) %>%
gather(key = "variable", value = "value", above65_percent_w:belowHS_percent_w) %>%
filter(Group == group) %>%
ggplot(aes(x = BUFF_DIST, y = value)) +
geom_boxplot() +
facet_wrap(~variable, ncol = 4, scales = "free") +
labs(x = "Buffer", y = "Value", title = group) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) # Center the title
}
donut(pw, "Wind")
names(pw)
# donut
donut <- function(data, group){
data %>%
mutate(BUFF_DIST = as.character(BUFF_DIST)) %>%
gather(key = "variable", value = "value", POPDEN:OVER64) %>%
filter(Group == group) %>%
ggplot(aes(x = BUFF_DIST, y = value)) +
geom_boxplot() +
facet_wrap(~variable, ncol = 4, scales = "free") +
labs(x = "Buffer", y = "Value", title = group) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) # Center the title
}
donut(pw, "Wind")
box_pl <- function(data, group, area){
data %>%
filter(Area == area) %>%
dplyr::select(-Status, - Area) %>%
drop_na() %>%
mutate(populationdensity = log(populationdensity)) %>%
filter(Group == group) %>%
dplyr::select(Group, Host, Buff, relevant_variables_demographics) %>%
mutate(Buff = as.character(Buff)) %>%
gather(key = "variable", value = "value"  , above65_percent:belowHS_percent) %>%
ggplot(aes(x = Buff, y = value, color = Host)) +
geom_boxplot(outlier.shape = NA) +
facet_wrap(~variable, ncol = 4, scales = "free") +
labs(x = "Buffer", y = "Value", title = paste0(group," by ", area)) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom") # Center the title
}
box_pl(ah, "Wind", "Tract")
box_pl <- function(data, group, area){
data %>%
filter(Area == area) %>%
dplyr::select( - Area) %>%
drop_na() %>%
mutate(populationdensity = log(populationdensity)) %>%
filter(Group == group) %>%
dplyr::select(Group, Host, Buff, relevant_variables_demographics) %>%
mutate(Buff = as.character(Buff)) %>%
gather(key = "variable", value = "value"  , above65_percent:belowHS_percent) %>%
ggplot(aes(x = Buff, y = value, color = Host)) +
geom_boxplot(outlier.shape = NA) +
facet_wrap(~variable, ncol = 4, scales = "free") +
labs(x = "Buffer", y = "Value", title = paste0(group," by ", area)) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom") # Center the title
}
box_pl(ah, "Wind", "Tract")
names(ah)
group
relevant_variables_demographics
box_pl <- function(data, group, area){
data %>%
filter(Area == area) %>%
dplyr::select( - Area) %>%
drop_na() %>%
mutate(POPDEN = log(POPDEN)) %>%
filter(Group == group) %>%
dplyr::select(Group, Host, Buff, relevant_variables_demographics) %>%
mutate(Buff = as.character(Buff)) %>%
gather(key = "variable", value = "value"  , POPDEN:OVER64) %>%
ggplot(aes(x = Buff, y = value, color = Host)) +
geom_boxplot(outlier.shape = NA) +
facet_wrap(~variable, ncol = 4, scales = "free") +
labs(x = "Buffer", y = "Value", title = paste0(group," by ", area)) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom") # Center the title
}
box_pl(ah, "Wind", "Tract")
relevant_variables_demographics
box_pl <- function(data, group, area){
data %>%
filter(Area == area) %>%
dplyr::select( - Area) %>%
drop_na() %>%
mutate(POPDEN = log(POPDEN)) %>%
filter(Group == group) %>%
dplyr::select(Group, Host, Buff, relevant_variables_demographics) %>%
mutate(Buff = as.character(Buff)) %>%
gather(key = "variable", value = "value"  , POPDEN:LESSHS) %>%
ggplot(aes(x = Buff, y = value, color = Host)) +
geom_boxplot(outlier.shape = NA) +
facet_wrap(~variable, ncol = 4, scales = "free") +
labs(x = "Buffer", y = "Value", title = paste0(group," by ", area)) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom") # Center the title
}
box_pl(ah, "Wind", "Tract")
regr_pl <- function(data, group, area, buffer){
dat <- data %>%
filter(Area == area) %>%
filter(Buff == buffer) %>%
filter(Group == group) %>%
dplyr::select(relevant_variables_demographics, Host) %>%
mutate(Host = ifelse(Host == "N", 0, 1),
POPDEN = log(POPDEN))
fit <- glm(Host ~ ., family = binomial(link="logit"), data = dat)
summary(fit)$coefficients %>%
as.data.frame() %>%
mutate(color = ifelse(`Pr(>|z|)` < 0.05, "Y", "N")) %>%
dplyr::select(-"z value",-"Pr(>|z|)") %>%
tibble::rownames_to_column("var") %>%
filter(!var == "(Intercept)") %>%
rename(se = "Std. Error",
pe = Estimate) %>%
mutate(Group = group,
Buffer = buffer,
Area = area,
var = factor(var, levels = c(relevant_variables_demographics))) %>%
ggplot(aes(y = exp(pe), x = reorder(var, exp(pe)))) +
geom_hline(yintercept = 1,linetype = "dashed", size = 0.5, color = "gray30") +
geom_errorbar(aes(ymin=exp(pe-1.96*se), ymax=exp(pe+1.96*se)),color="gray50") +
geom_point(aes(fill = color),size = 2, color = "black",pch=21) +
# geom_text(data = tp, aes(x = 0, y = n + 0.5, label = cat), hjust = 1) +
coord_flip() +
theme_bw() +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
labs(x = "", y ="Odds ratio",
title = paste0(group)) +
facet_grid(Area+Buffer ~Group, scales = "free") +
scale_fill_manual(values=c("orange", "gray")) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background =element_rect(fill="gray22",color="gray22"),
strip.text = element_text(color = 'white',family="Franklin Gothic Book",size=12),
legend.position = "none",
axis.text.x = element_text(color = "black",family="Franklin Gothic Book",size=6),
axis.text.y = element_text(color = "black",family="Franklin Gothic Book",size=9),
axis.title.x = element_text(color = "black",family="Franklin Gothic Book",size=11),
plot.title=element_text(family="Franklin Gothic Demi", size=20))
}
regr_pl(ah, "Wind", "Tract", "3")
data <- ah
group <- "Wind"
area <- "Track"
area <- "Tract"
buffer <- "3"
dat <- data %>%
filter(Area == area) %>%
filter(Buff == buffer) %>%
filter(Group == group) %>%
dplyr::select(relevant_variables_demographics, Host) %>%
mutate(Host = ifelse(Host == "N", 0, 1),
POPDEN = log(POPDEN))
fit <- glm(Host ~ ., family = binomial(link="logit"), data = dat)
names(dat)
View(dat)
fit <- glm(Host ~ ., family = binomial(link="logit"), data = dat)
names(ah)
dat <- data %>%
filter(population > 0) %>%
filter(Area == area) %>%
filter(Buff == buffer) %>%
filter(Group == group) %>%
dplyr::select(relevant_variables_demographics, Host) %>%
mutate(Host = ifelse(Host == "N", 0, 1),
POPDEN = log(POPDEN))
fit <- glm(Host ~ ., family = binomial(link="logit"), data = dat)
regr_pl <- function(data, group, area, buffer){
dat <- data %>%
filter(population > 0) %>%
filter(Area == area) %>%
filter(Buff == buffer) %>%
filter(Group == group) %>%
dplyr::select(relevant_variables_demographics, Host) %>%
mutate(Host = ifelse(Host == "N", 0, 1),
POPDEN = log(POPDEN))
fit <- glm(Host ~ ., family = binomial(link="logit"), data = dat)
summary(fit)$coefficients %>%
as.data.frame() %>%
mutate(color = ifelse(`Pr(>|z|)` < 0.05, "Y", "N")) %>%
dplyr::select(-"z value",-"Pr(>|z|)") %>%
tibble::rownames_to_column("var") %>%
filter(!var == "(Intercept)") %>%
rename(se = "Std. Error",
pe = Estimate) %>%
mutate(Group = group,
Buffer = buffer,
Area = area,
var = factor(var, levels = c(relevant_variables_demographics))) %>%
ggplot(aes(y = exp(pe), x = reorder(var, exp(pe)))) +
geom_hline(yintercept = 1,linetype = "dashed", size = 0.5, color = "gray30") +
geom_errorbar(aes(ymin=exp(pe-1.96*se), ymax=exp(pe+1.96*se)),color="gray50") +
geom_point(aes(fill = color),size = 2, color = "black",pch=21) +
# geom_text(data = tp, aes(x = 0, y = n + 0.5, label = cat), hjust = 1) +
coord_flip() +
theme_bw() +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
labs(x = "", y ="Odds ratio",
title = paste0(group)) +
facet_grid(Area+Buffer ~Group, scales = "free") +
scale_fill_manual(values=c("orange", "gray")) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background =element_rect(fill="gray22",color="gray22"),
strip.text = element_text(color = 'white',family="Franklin Gothic Book",size=12),
legend.position = "none",
axis.text.x = element_text(color = "black",family="Franklin Gothic Book",size=6),
axis.text.y = element_text(color = "black",family="Franklin Gothic Book",size=9),
axis.title.x = element_text(color = "black",family="Franklin Gothic Book",size=11),
plot.title=element_text(family="Franklin Gothic Demi", size=20))
}
regr_pl(ah, "Wind", "Tract", "3")
dat <- data %>%
filter(population > 0) %>%
filter(Area == area) %>%
filter(Group == group) %>%
dplyr::select(relevant_variables_demographics, Host) %>%
mutate(Host = ifelse(Host == "N", 0, 1),
POPDEN = log(POPDEN))
fit <- glm(Host ~ ., family = binomial(link="logit"), data = dat)
summary(fit)$coefficients %>%
as.data.frame() %>%
mutate(color = ifelse(`Pr(>|z|)` < 0.05, "Y", "N")) %>%
dplyr::select(-"z value",-"Pr(>|z|)") %>%
tibble::rownames_to_column("var") %>%
filter(!var == "(Intercept)") %>%
rename(se = "Std. Error",
pe = Estimate) %>%
mutate(Group = group,
Buffer = buffer,
Area = area,
var = factor(var, levels = c(relevant_variables_demographics))) %>%
ggplot(aes(y = exp(pe), x = reorder(var, exp(pe)))) +
geom_hline(yintercept = 1,linetype = "dashed", size = 0.5, color = "gray30") +
geom_errorbar(aes(ymin=exp(pe-1.96*se), ymax=exp(pe+1.96*se)),color="gray50") +
geom_point(aes(fill = color),size = 2, color = "black",pch=21) +
# geom_text(data = tp, aes(x = 0, y = n + 0.5, label = cat), hjust = 1) +
coord_flip() +
theme_bw() +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
labs(x = "", y ="Odds ratio",
title = paste0(group)) +
facet_grid(Area+Buffer ~Group, scales = "free") +
scale_fill_manual(values=c("orange", "gray")) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background =element_rect(fill="gray22",color="gray22"),
strip.text = element_text(color = 'white',family="Franklin Gothic Book",size=12),
legend.position = "none",
axis.text.x = element_text(color = "black",family="Franklin Gothic Book",size=6),
axis.text.y = element_text(color = "black",family="Franklin Gothic Book",size=9),
axis.title.x = element_text(color = "black",family="Franklin Gothic Book",size=11),
plot.title=element_text(family="Franklin Gothic Demi", size=20))
regr_pl <- function(data, group, area){
dat <- data %>%
filter(population > 0) %>%
filter(Area == area) %>%
filter(Group == group) %>%
dplyr::select(relevant_variables_demographics, Host) %>%
mutate(Host = ifelse(Host == "N", 0, 1),
POPDEN = log(POPDEN))
fit <- glm(Host ~ ., family = binomial(link="logit"), data = dat)
summary(fit)$coefficients %>%
as.data.frame() %>%
mutate(color = ifelse(`Pr(>|z|)` < 0.05, "Y", "N")) %>%
dplyr::select(-"z value",-"Pr(>|z|)") %>%
tibble::rownames_to_column("var") %>%
filter(!var == "(Intercept)") %>%
rename(se = "Std. Error",
pe = Estimate) %>%
mutate(Group = group,
Area = area,
var = factor(var, levels = c(relevant_variables_demographics))) %>%
ggplot(aes(y = exp(pe), x = reorder(var, exp(pe)))) +
geom_hline(yintercept = 1,linetype = "dashed", size = 0.5, color = "gray30") +
geom_errorbar(aes(ymin=exp(pe-1.96*se), ymax=exp(pe+1.96*se)),color="gray50") +
geom_point(aes(fill = color),size = 2, color = "black",pch=21) +
# geom_text(data = tp, aes(x = 0, y = n + 0.5, label = cat), hjust = 1) +
coord_flip() +
theme_bw() +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
labs(x = "", y ="Odds ratio",
title = paste0(group)) +
facet_grid(Area+Buffer ~Group, scales = "free") +
scale_fill_manual(values=c("orange", "gray")) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background =element_rect(fill="gray22",color="gray22"),
strip.text = element_text(color = 'white',family="Franklin Gothic Book",size=12),
legend.position = "none",
axis.text.x = element_text(color = "black",family="Franklin Gothic Book",size=6),
axis.text.y = element_text(color = "black",family="Franklin Gothic Book",size=9),
axis.title.x = element_text(color = "black",family="Franklin Gothic Book",size=11),
plot.title=element_text(family="Franklin Gothic Demi", size=20))
}
regr_pl(ah, "Wind", "Tract", "3")
regr_pl(ah, "Wind", "Tract")
regr_pl <- function(data, group, area, buffer){
dat <- data %>%
filter(population > 0) %>%
filter(Area == area) %>%
filter(Buff == buffer) %>%
filter(Group == group) %>%
dplyr::select(relevant_variables_demographics, Host) %>%
mutate(Host = ifelse(Host == "N", 0, 1),
POPDEN = log(POPDEN))
fit <- glm(Host ~ ., family = binomial(link="logit"), data = dat)
summary(fit)$coefficients %>%
as.data.frame() %>%
mutate(color = ifelse(`Pr(>|z|)` < 0.05, "Y", "N")) %>%
dplyr::select(-"z value",-"Pr(>|z|)") %>%
tibble::rownames_to_column("var") %>%
filter(!var == "(Intercept)") %>%
rename(se = "Std. Error",
pe = Estimate) %>%
mutate(Group = group,
Buffer = buffer,
Area = area,
var = factor(var, levels = c(relevant_variables_demographics))) %>%
ggplot(aes(y = exp(pe), x = reorder(var, exp(pe)))) +
geom_hline(yintercept = 1,linetype = "dashed", size = 0.5, color = "gray30") +
geom_errorbar(aes(ymin=exp(pe-1.96*se), ymax=exp(pe+1.96*se)),color="gray50") +
geom_point(aes(fill = color),size = 2, color = "black",pch=21) +
# geom_text(data = tp, aes(x = 0, y = n + 0.5, label = cat), hjust = 1) +
coord_flip() +
theme_bw() +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
labs(x = "", y ="Odds ratio",
title = paste0(group)) +
facet_grid(Area+Buffer ~Group, scales = "free") +
scale_fill_manual(values=c("orange", "gray")) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background =element_rect(fill="gray22",color="gray22"),
strip.text = element_text(color = 'white',family="Franklin Gothic Book",size=12),
legend.position = "none",
axis.text.x = element_text(color = "black",family="Franklin Gothic Book",size=6),
axis.text.y = element_text(color = "black",family="Franklin Gothic Book",size=9),
axis.title.x = element_text(color = "black",family="Franklin Gothic Book",size=11),
plot.title=element_text(family="Franklin Gothic Demi", size=20))
}
regr_pl(ah, "Wind", "Tract", "3")
mpping <- function(data, group, icth, rcth){
data %>%
filter(Group == group) %>%
left_join(dis %>%
st_drop_geometry(), by = "GEOID") %>%
filter(!is.na(disadvantage)) %>%
mutate(disadvantaged = ifelse(disadvantaged == "TRUE", "Disadvantaged community",
"Not disadvantaged community")) %>%
ggplot() +
geom_sf(data = st, fill = "gray95", color = "gray60", size = 0.1) +
geom_sf(shape = 21, alpha = 0.7, aes(fill = disadvantaged,
size = `Total Nameplate Capacity MW`/1000)) +
# scale_fill_manual(values = c(HH = "red",HL = "green",LH = "blue",LL = "white")) +
scale_fill_viridis_d(direction = -1) +
scale_color_manual(values = c("black","white")) +
scale_shape_manual(values = c(21,22)) +
labs(fill = "",
color = "",
size = "Capacity (GW)",
title = group) +
theme_minimal() +
coord_sf(crs = st_crs(2163), xlim = c(-2500000, 2700000),
ylim = c(-2300000,730000), expand = FALSE, datum = NA) +
guides(fill = guide_legend(order = 1),
color = guide_legend(order = 2),
size = guide_legend(order = 3))
}
mpping(pm, "Wind")
mpping <- function(data, group){
data %>%
filter(Group == group) %>%
left_join(dis %>%
st_drop_geometry(), by = "GEOID") %>%
filter(!is.na(disadvantaged)) %>%
mutate(disadvantaged = ifelse(disadvantaged == "TRUE", "Disadvantaged community",
"Not disadvantaged community")) %>%
ggplot() +
geom_sf(data = st, fill = "gray95", color = "gray60", size = 0.1) +
geom_sf(shape = 21, alpha = 0.7, aes(fill = disadvantaged,
size = `Total Nameplate Capacity MW`/1000)) +
# scale_fill_manual(values = c(HH = "red",HL = "green",LH = "blue",LL = "white")) +
scale_fill_viridis_d(direction = -1) +
scale_color_manual(values = c("black","white")) +
scale_shape_manual(values = c(21,22)) +
labs(fill = "",
color = "",
size = "Capacity (GW)",
title = group) +
theme_minimal() +
coord_sf(crs = st_crs(2163), xlim = c(-2500000, 2700000),
ylim = c(-2300000,730000), expand = FALSE, datum = NA) +
guides(fill = guide_legend(order = 1),
color = guide_legend(order = 2),
size = guide_legend(order = 3))
}
mpping(pm, "Wind")
# technology boxplot by distance
donut(pw, "Wind")
# technology boxplot by host vs. non-host by distance
box_pl(ah, "Wind", "Tract")
# regression results
regr_pl(ah, "Wind", "Tract", "3")
# generator mapping
mpping(pm, "Wind")
